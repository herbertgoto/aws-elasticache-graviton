AWSTemplateFormatVersion: "2010-09-09"
Description: Deploy a solution to frequently evaluate ElastiCache nodes to find Graviton and reservation candidates
Parameters:
  ParamS3Bucket:
    Description: The S3 Bucket that holds the lambda code
    Type: String
  LambdaLayerArn:
    Description: The ARN for the Pandas Lambda Layer
    Type: String

Resources:
  
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: AllowLambdaToWriteLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*"
              - Sid: AllowLambdaToCreateLogGroups
                Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
        - PolicyName: PublishSNS
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - sns:Publish
                Resource: 
                  - !Ref SNSTopic
                  - !Ref SNSTopicAlert
        - PolicyName: S3Access
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                Resource: 
                  !Join
                    - '' 
                    - - !GetAtt S3BucketReports.Arn
                      - '/*'
        - PolicyName: ElastiCacheDescribe
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - elasticache:DescribeReservedCacheNodes
                  - elasticache:DescribeCacheClusters
                Resource: '*'
      RoleName: !Sub "ElastiCache-Candidate-${AWS::StackName}"
      Path:
        Fn::Sub: /
  
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties: 
      TopicName: !Sub "aws-sns-elasticache-graviton-${AWS::StackName}"  
  
  SNSTopicAlert:
    Type: AWS::SNS::Topic
    Properties: 
      TopicName: !Sub "aws-sns-elasticache-alert-${AWS::StackName}"
  
  S3BucketReports:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain

  LambdaFunction:
    Type: AWS::Lambda::Function
    DependsOn:
      - S3BucketReports
      - SNSTopicAlert
      - SNSTopic
      - LambdaRole
    Properties:
      Code:
        S3Bucket: !Ref ParamS3Bucket
        S3Key: 'elasticacheLambda.zip'
      Description: 'Lambda to evaluate ElastiCache nodes for Graviton and reservation candidates'
      Environment:
        Variables:
          GRAVITON_REDIS_SUPPORTED_VERSION: '5.0.6'
          GRAVITON_MEMCACHED_SUPPORTED_VERSION: '1.5.16'
          BUCKET_NAME: !Ref S3BucketReports
          BUCKET_PATH: 'elasticache'
          SNS_TOPIC_ARN_ALERT: !Ref SNSTopicAlert
          SNS_TOPIC: !Ref SNSTopic
      FunctionName: !Sub "aws-lambda-elasticache-${AWS::StackName}"
      Handler: 'lambda_function.lambda_handler'
      MemorySize: 256
      Role:
        Fn::GetAtt: LambdaRole.Arn
      Runtime: python3.7
      Timeout: 120
      Layers: 
        - !Ref LambdaLayerArn

  Scheduler:
    Type: AWS::Events::Rule
    Properties: 
      Description: 'Rule that triggers the Lambda function'
      Name: !Sub "aws-rule-${AWS::StackName}"
      ScheduleExpression: "rate(1 hour)"
      State: ENABLED
      Targets: 
        - Arn: !GetAtt LambdaFunction.Arn
          Id: !Sub "id-lambda-${AWS::StackName}"
    DependsOn: LambdaFunction

Outputs:
  SNSTopic:
    Value: !Ref SNSTopic
  SNSTopicAlert:
    Value: !Ref SNSTopicAlert
  S3BucketReports:
    Value: !Ref S3BucketReports
   EventBridgeRule:
    Value: !Ref Scheduler